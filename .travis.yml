language: generic
sudo: false

notifications:
  email: false

git:
  depth: 10
  submodules_depth: 10

branches:
  only:
    - master
    - develop
    - /^\d+\.?\d+\.?\d*$/
    - feature/android-ci

addons_shortcuts:
  addons_clang7: &clang7
    apt:
      packages: [ 'libc++-dev', 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  addons_gcc6: &gcc6
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-6', 'gcc-6', 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  # Use old enough compiler and no unsupported packages so that release build runs on older systems
  # TODO test building with -static-libstdc++ or -static-libgcc on older systems
  addons_gcc4: &gcc4
    ssh_known_hosts: helio.fm
    apt:
      packages: [ 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  addons_deploy: &deploy
    ssh_known_hosts: helio.fm

matrix:
  include:
    - name: "clang 7, debug build x64"
      os: linux
      dist: xenial
      addons: *clang7
      env: CC=clang CXX=clang++ CONFIG=Debug DISPLAY=localhost:1.0 CFLAGS=-stdlib=libc++ LDFLAGS=-stdlib=libc++
    - name: "gcc 6, debug build x64"
      os: linux
      dist: trusty
      addons: *gcc6
      env: CC=gcc-6 CXX=g++-6 CONFIG=Debug DISPLAY=localhost:1.0
    - name: "gcc 4, release build x64, deploy"
      os: linux
      dist: trusty
      addons: *gcc4
      env: DEPLOY=true PLATFORM=linux CONFIG=Release64 DISPLAY=localhost:1.0
    - name: "xcode 10.1 mac, release and deploy"
      os: osx
      osx_image: xcode10.1
      xcode_sdk: macosx10.14
      addons: *deploy
      env: DEPLOY=true PLATFORM=osx
    - name: "xcode 10.1 ios, release and deploy"
      os: osx
      osx_image: xcode10.1
      xcode_sdk: iphoneos
      addons: *deploy
      env: DEPLOY=true PLATFORM=ios
    - name: "android 21, release and deploy"
      os: linux
      language: android
      jdk: oraclejdk8
      addons: *deploy
      env: DEPLOY=true PLATFORM=android ANDROID_NDK_HOME=${ANDROID_HOME}/ndk-bundle
      android:
        components:
          - tools
          - platform-tools
          - build-tools-28.0.3
          - android-28
      before_cache:
        - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
         - $HOME/.gradle/caches/
         - $HOME/.gradle/wrapper/

before_script:
  - if [[ "${PLATFORM}" == "osx" ]]; then
    openssl aes-256-cbc -K $encrypted_7e0c200de200_key -iv $encrypted_7e0c200de200_iv -in ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/certificates-osx.tar.enc -out /tmp/certificates.tar -d;
    tar xvf /tmp/certificates.tar -C /tmp;
    bash ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/setup-osx.sh;
    fi
  - if [[ "${PLATFORM}" == "ios" ]]; then
    openssl aes-256-cbc -K $encrypted_4bdaf07bd33c_key -iv $encrypted_4bdaf07bd33c_iv -in ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/certificates-ios.tar.enc -out /tmp/certificates.tar -d;
    tar xvf /tmp/certificates.tar -C /tmp;
    bash ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/setup-ios.sh;
    fi
  - if [[ "${PLATFORM}" == "android" ]]; then
    echo y | sdkmanager 'ndk-bundle';
    echo y | sdkmanager 'cmake;3.6.4111459';
    fi

script:
  - if [[ "${PLATFORM}" == "linux" ]]; then
    xvfb-run -a bash -c 'cd Projects/LinuxMakefile && make all strip';
    fi
  - if [[ "${PLATFORM}" == "osx" ]]; then
    xcodebuild -project Projects/macOS/Helio.xcodeproj -configuration Release -scheme 'Helio - App' -archivePath /tmp/archive archive;
    fi
  - if [[ "${PLATFORM}" == "ios" ]]; then
    xcodebuild -project Projects/iOS/Helio.xcodeproj -configuration Release -scheme 'Helio - App' -archivePath /tmp/archive archive;
    fi
  - if [[ "${PLATFORM}" == "android" ]]; then
    cd Projects/Android && chmod +x gradlew && ./gradlew clean assembleRelease;
    fi

before_deploy:
  - openssl aes-256-cbc -K $encrypted_e6d7a52b0113_key -iv $encrypted_e6d7a52b0113_iv -in ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/deploy-rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa

deploy:
  provider: script
  skip_cleanup: true
  script: bash ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/deploy-${PLATFORM}.sh
  on:
    all_branches: true
    repo: helio-fm/helio-workstation
    condition: ${DEPLOY} = true
